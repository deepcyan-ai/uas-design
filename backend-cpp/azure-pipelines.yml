# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
  - job: ubuntu_20_04
    displayName: 'Build - Ubuntu 20.04'
    continueOnError: false
    pool:
      vmImage: 'ubuntu-20.04'
    workspace:
      clean: all
    steps:
      - script: |
          mkdir build

      #######################################################################################
      ## Build oatpp
      - script: |
          git clone https://github.com/oatpp/oatpp
          mkdir -p oatpp/build
        displayName: 'Checkout - oatpp'
        workingDirectory: build
      - script: |
          cmake -DOATPP_BUILD_TESTS=OFF ..
          sudo make install
        displayName: 'Build - oatpp'
        workingDirectory: build/oatpp/build

      #######################################################################################
      ## Build oatpp-sqlite
      - script: |
          git clone https://github.com/oatpp/oatpp-sqlite
          mkdir -p oatpp-sqlite/build
        displayName: 'Checkout - oatpp-sqlite'
        workingDirectory: build
      - script: |
          cmake -DOATPP_SQLITE_AMALGAMATION=ON ..
          sudo make install
        displayName: 'Build - oatpp-sqlite'
        workingDirectory: build/oatpp-sqlite/build

      #######################################################################################
      ## Build oatpp-swagger
      - script: |
          git clone https://github.com/oatpp/oatpp-swagger
          mkdir -p oatpp-swagger/build
        displayName: 'Checkout - oatpp-swagger'
        workingDirectory: build
      - script: |
          cmake ..
          sudo make install
        displayName: 'Build - oatpp-swagger'
        workingDirectory: build/oatpp-swagger/build

      #######################################################################################
      ## Build Project
      - script: |
          cmake ..
          sudo make
        displayName: 'CMake'
        workingDirectory: build
      - script: |
          make test ARGS="-V"
        displayName: 'Test'
        workingDirectory: build

  - job: macOS
    displayName: 'Build - macOS'
    continueOnError: false
    pool:
      vmImage: 'macOS-latest'
    workspace:
      clean: all
    steps:
      - script: |
          mkdir build

      #######################################################################################
      ## Build oatpp
      - script: |
          git clone https://github.com/oatpp/oatpp
          mkdir -p oatpp/build
        displayName: 'Checkout - oatpp'
        workingDirectory: build
      - script: |
          cmake -DOATPP_BUILD_TESTS=OFF ..
          sudo make install
        displayName: 'Build - oatpp'
        workingDirectory: build/oatpp/build

      #######################################################################################
      ## Build oatpp-sqlite
      - script: |
          git clone https://github.com/oatpp/oatpp-sqlite
          mkdir -p oatpp-sqlite/build
        displayName: 'Checkout - oatpp-sqlite'
        workingDirectory: build
      - script: |
          cmake -DOATPP_SQLITE_AMALGAMATION=ON ..
          sudo make install
        displayName: 'Build - oatpp-sqlite'
        workingDirectory: build/oatpp-sqlite/build

      #######################################################################################
      ## Build oatpp-swagger
      - script: |
          git clone https://github.com/oatpp/oatpp-swagger
          mkdir -p oatpp-swagger/build
        displayName: 'Checkout - oatpp-swagger'
        workingDirectory: build
      - script: |
          cmake ..
          sudo make install
        displayName: 'Build - oatpp-swagger'
        workingDirectory: build/oatpp-swagger/build

      #######################################################################################
      ## Build Project
      - script: |
          cmake ..
          sudo make
        displayName: 'CMake'
        workingDirectory: build
      - script: |
          make test ARGS="-V"
        displayName: 'Test'
        workingDirectory: build

  - job: windows
    displayName: 'Build - Windows'
    continueOnError: false
    pool:
      vmImage: 'windows-latest'
    workspace:
      clean: all
    steps:
      - script: |
          MD build

      #######################################################################################
      ## Build oatpp
      - script: |
          git clone https://github.com/oatpp/oatpp
          MD oatpp\build
        displayName: 'Checkout - oatpp'
        workingDirectory: build
      - script: |
          cmake -DOATPP_BUILD_TESTS=OFF ..
          cmake --build . --target INSTALL
        displayName: 'Build - oatpp'
        workingDirectory: build\oatpp\build

      #######################################################################################
      ## Build oatpp-sqlite
      - script: |
          git clone https://github.com/oatpp/oatpp-sqlite
          MD oatpp-sqlite\build
        displayName: 'Checkout - oatpp-sqlite'
        workingDirectory: build
      - script: |
          cmake -DOATPP_SQLITE_AMALGAMATION=ON ..
          cmake --build . --target INSTALL
        displayName: 'Build - oatpp-sqlite'
        workingDirectory: build\oatpp-sqlite\build

      #######################################################################################
      ## Build oatpp-swagger
      - script: |
          git clone https://github.com/oatpp/oatpp-swagger
          MD oatpp-swagger\build
        displayName: 'Checkout - oatpp-swagger'
        workingDirectory: build
      - script: |
          cmake ..
          cmake --build . --target INSTALL
        displayName: 'Build - oatpp-swagger'
        workingDirectory: build\oatpp-swagger\build

      #######################################################################################
      ## Build Project
      - script: |
          cmake ..
          cmake --build .
        displayName: 'CMake'
        workingDirectory: build
      - script: |
          crud-test.exe
        displayName: 'Test'
        workingDirectory: build\Debug
